<style>
  text {font: 12px sans-serif;}
  svg {display: block;}
  
  #chart1, svg {
    margin: 10px;
    padding: -20px;

    height: 75%;
  }
</style>

<div class="container-fluid">
  <div class="row">
    <%= render 'main/sidebar' %>
    <div class="col-sm-9 col-sm-offset-3 col-md-10 col-md-offset-2 main">
    <h1>Dashboard</h1>

    <link href="nv.d3.css" rel="stylesheet" type="text/css">
    <script src="d3.min.js" charset="utf-8"></script>
    <script src="nv.d3.js"></script>
    <center>
    <%
      x = 0 
      @beehives.each do |beehive| %>
      <button onclick="changeHive(<%= x %>)" class="btn btn-warning btn-xs"><%= beehive.name %></button>
    <% x = x+1
       end %>
    </center>
    <div id="chart1"></div>
    
    <!--<button onclick="resetAlerte()">miel recolte, reset alerte</button>
    <button onclick="desactiveAlerte()">active / desactive alerte miel</button>-->
    <script>
        // Wrapping in nv.addGraph allows for '0 timeout render', stores rendered charts in nv.graphs, and may do more in the future... it's NOT required
        var chart;
        var T = <%= raw(@dataString) %>;
        var data = T[0];

        function addGraph() {
            chart = nv.models.lineChart()
                    .useInteractiveGuideline(true)
                  .average(function(d) { return d.mean/100; })
                  
            ;
        
            // chart sub-models (ie. xAxis, yAxis, etc) when accessed directly, return themselves, not the parent chart, so need to chain separately
            chart.xAxis
          .axisLabel("Date")
                .tickFormat(d3.format(',.1f'))
                .staggerLabels(true)
                
            ;
        chart.xAxis.tickFormat(function(d) {
                return d3.time.format('%d/%m/%y')(new Date(d*1000))
            });
            chart.forceY([0])
            chart.yAxis
                .tickFormat(d3.format(',.2f'))
                
          
            ;
            d3.select('#chart1').append('svg')
                .datum(cumulativeTestData())
                .call(chart);
            nv.utils.windowResize(chart.update);
         
         
         
            return chart;
        }

        nv.addGraph(addGraph);

      function changeHive(x){
        data = T[x];
        d3.select('#chart1').html("");
        nv.addGraph(addGraph);
      }
      
      function resetAlerte(){
      // on passe prevenu a false et on change la date de debut de surveillance
      prevenu=false;
      debut_surveille=Date();
      }
      
      function desactiveAlerte(){
      // on passe alerte status a son oppose  
      alerte_status=false;
      }
      
      function cumulativeTestData() {
        var maxi_miel=30;
        var prevenu=false;
        var debut_surveille=14278680;
        var alerte_status=true;
      return data;
    }
    </script>


    </div>
  </div>
</div>
<script>
  $(document).ready(function () {
    $(".nav li").removeClass("active");
    $('#overview').addClass('active');
  });
</script>
